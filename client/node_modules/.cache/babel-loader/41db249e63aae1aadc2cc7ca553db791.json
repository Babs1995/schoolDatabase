{"ast":null,"code":"var _jsxFileName = \"/Users/brojasbaez/Desktop/schoolDatabase/client/src/components/UpdatedCourse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Buffer } from 'buffer';\nimport Form from './Form';\nimport Forbidden from './Forbidden';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatedCourse(_ref) {\n  _s();\n\n  let {\n    context\n  } = _ref;\n  const history = useHistory();\n  const [course, setCourse] = useState('');\n  const [description, setDescription] = useState('');\n  const [materialsNeeded, setMaterialsNeeded] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [user, setUser] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/courses/${id}`);\n\n        if (response.status === 200) {\n          const json = await response.json();\n          setCourse(json.course);\n          setDescription(json.description);\n          setUser(json.user);\n        } else if (response.status === 500) {\n          history.push('/error');\n        } else {\n          history.push('/notfound');\n        }\n      } catch (err) {}\n    };\n\n    fetchData();\n  }, [history, id]);\n\n  function cancel() {\n    history.push('/courses');\n  }\n\n  function submit() {\n    const updatedCourse = {\n      course,\n      description,\n      materialsNeeded,\n      userId: context.auth - user.id\n    };\n    const body = JSON.stringify(updatedCourse);\n    let newErrors = [];\n\n    if (!course || !description) {\n      if (!course) {\n        newErrors.push(['Provide a valid value for \"Course\".']);\n        setErrors(newErrors);\n      }\n\n      if (!description) {\n        newErrors.push(['Provide a valid value for \"Description\".']);\n        setErrors(newErrors);\n      }\n    } else {\n      fetch(`http://localhost:5000/api/courses/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': 'Basic ' + Buffer.from(`${context.auth - user.emailAddress}:${context.auth - user.password}`).toString(\"base64\")\n        },\n        body: body\n      }).then(response => {\n        if (response.status === 204) {\n          history.push(`/courses/${id}`);\n        } else if (response.status === 400) {\n          return response.json().then(data => {\n            return data.errors;\n          });\n        } else {\n          throw new Error();\n        }\n      });\n    }\n  }\n\n  function change(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    if (name === 'courseCourse') {\n      setCourse(value);\n    } else if (name === 'courseDescription') {\n      setDescription(value);\n    } else if (name === 'materialsNeeded') {\n      setMaterialsNeeded(value);\n    } else {\n      return;\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: user && user.id === context.auth - user.id ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          cancel: cancel,\n          errors: errors,\n          submit: submit,\n          submitButtonText: \"Update Course\",\n          elements: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main--flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"courseCourse\",\n                  children: \"Course Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"courseCourse\",\n                  name: \"courseCourse\",\n                  type: \"text\",\n                  value: course,\n                  onChange: change\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 49\n                }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"By \", user.firstName, \" \", user.lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"courseDescription\",\n                  children: \"Course Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"courseDescription\",\n                  name: \"courseDescription\",\n                  value: description,\n                  onChange: change\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"materialsNeeded\",\n                  children: \"Materials Needed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"materialsNeeded\",\n                  name: \"materialsNeeded\",\n                  value: materialsNeeded,\n                  onChange: change\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Forbidden, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdatedCourse, \"nWqRIjcMbedecv/PI/QlaU0qBy0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = UpdatedCourse;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatedCourse\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","useParams","Buffer","Form","Forbidden","UpdatedCourse","context","history","course","setCourse","description","setDescription","materialsNeeded","setMaterialsNeeded","errors","setErrors","user","setUser","id","fetchData","response","fetch","status","json","push","err","cancel","submit","updatedCourse","userId","auth","body","JSON","stringify","newErrors","method","headers","from","emailAddress","password","toString","then","data","Error","change","event","name","target","value","firstName","lastName"],"sources":["/Users/brojasbaez/Desktop/schoolDatabase/client/src/components/UpdatedCourse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Buffer } from 'buffer';\nimport Form from './Form';\nimport Forbidden from './Forbidden';\n\nexport default function UpdatedCourse({context}) {\n\n    const history = useHistory();\n    const [course, setCourse] = useState('');\n    const [description, setDescription] = useState('');\n    const [materialsNeeded, setMaterialsNeeded] = useState('');\n    const [errors, setErrors] = useState([]);\n    const [user, setUser] = useState([]);\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchData = async() => {\n            try {\n                const response = await fetch(`http://localhost:5000/api/courses/${id}`);\n                if(response.status===200) {\n                    const json = await response.json();\n                    setCourse(json.course);\n                    setDescription(json.description);\n                    setUser(json.user);\n                } else if (response.status === 500) {\n                    history.push('/error');\n                } else {\n                    history.push('/notfound');\n                }\n            } catch (err) {\n            }\n        };\n        fetchData();\n    }, [history, id]);\n    function cancel() {\n        history.push('/courses');\n    }\n\n    function submit() {\n        const updatedCourse = {\n            course,\n            description,\n            materialsNeeded,\n            userId: context.auth-user.id,\n        };\n\n        const body = JSON.stringify(updatedCourse);\n       \n        let newErrors = [];\n        if(!course || !description) {\n            if (!course) {\n                newErrors.push(['Provide a valid value for \"Course\".']);\n                setErrors(newErrors);\n            }\n            if (!description) {\n                newErrors.push(['Provide a valid value for \"Description\".'])\n                setErrors(newErrors);\n            }\n        } else {\n            fetch(`http://localhost:5000/api/courses/${id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" ,\n                        'Authorization': 'Basic ' + Buffer.from(`${context.auth-user.emailAddress}:${context.auth-user.password}`).toString(\"base64\") \n                },\n                body: body,\n            })\n                .then( response => {\n                    if (response.status === 204) {\n                        history.push(`/courses/${id}`);\n                    } else if (response.status === 400){\n                        return response.json().then(data => {\n                            return data.errors;\n                        });\n                    } else {\n                        throw new Error();\n                    }\n                })\n        }\n    }\n\n    function change(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n        if (name === 'courseCourse') {\n            setCourse(value);\n        }\n        else if (name === 'courseDescription') {\n            setDescription(value);\n        } else if (name === 'materialsNeeded') {\n            setMaterialsNeeded(value);\n        }\n        else {\n            return;\n        }\n    };\n\n    return (\n        <main>\n            {(user && user.id === context.auth-user.id) ? \n                <React.Fragment>\n                    <div className=\"wrap\">\n                        <h2>Update Course</h2>\n                        <Form\n                            cancel={cancel}\n                            errors={errors}\n                            submit={submit}\n                            submitButtonText=\"Update Course\"\n                            elements={() => (\n                                <React.Fragment>\n                                    <div className=\"main--flex\">\n                                        <div>\n                                            <label htmlFor=\"courseCourse\">Course Title</label>\n                                                <input \n                                                    id=\"courseCourse\" name=\"courseCourse\" type=\"text\" value={course} \n                                                    onChange={change}\n                                                />\n                                            {user && \n                                                (<p>\n                                                    By {user.firstName} {user.lastName}\n                                                </p>\n                                            )}\n                                            <label htmlFor=\"courseDescription\">Course Description</label>\n                                                <textarea id=\"courseDescription\" name=\"courseDescription\" value={description} onChange={change}></textarea>\n                                        </div>\n\n                                        <div>\n                                            <label htmlFor=\"materialsNeeded\">Materials Needed</label>\n                                                <textarea id=\"materialsNeeded\" name=\"materialsNeeded\" value={materialsNeeded} onChange={change}></textarea>\n                                        </div>\n                                    </div>\n                                </React.Fragment>\n                            )} \n                        />\n                    </div>\n                </React.Fragment>\n            :\n                <Forbidden />\n            }\n        </main>\n    )};"],"mappings":"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"},"metadata":{},"sourceType":"module"}