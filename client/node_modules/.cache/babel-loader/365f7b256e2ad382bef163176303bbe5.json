{"ast":null,"code":"import { Buffer } from \"buffer\"; // import { CSSCourses } from \"data\"; \n\nexport default class Data {\n  api(path) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let requiresAuth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let credentials = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    const url = \"http://localhost:5000/api\" + path;\n    const options = {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = Buffer.from(`${credentials.emailAddress}:${credentials.password}`).toString(\"base64\");\n      options.headers[\"Authorization\"] = `Basic ${encodedCredentials}`;\n    }\n\n    return fetch(url, options);\n  }\n\n  async getUser(emailAddress, password) {\n    const response = await this.api(`/users`, \"GET\", null, true, {\n      emailAddress,\n      password\n    });\n\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async createUser(user) {\n    const response = await this.api(\"/users\", \"POST\", user);\n\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async getCourses() {\n    const response = await this.api(`/courses`, \"GET\");\n\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async getCourse(id) {\n    const response = await this.api(`/courses/${id}`, \"GET\", null, true);\n\n    if (response.status === 200) {\n      return response.json().then(data => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async createCourse(course, credentials) {\n    const {\n      emailAddress,\n      password\n    } = credentials;\n    const response = await this.api(\"/courses\", \"POST\", course, true, {\n      emailAddress,\n      password\n    });\n\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async updatedCourse(id, course) {\n    const response = await this.api(`/courses/${id}`, \"PUT\", course);\n\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then(data => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async deleteCourse(id, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, \"DELETE\", true, {\n      emailAddress,\n      password\n    });\n\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 400) {} else {\n      throw new Error();\n    }\n  }\n\n}","map":{"version":3,"names":["Buffer","Data","api","path","method","body","requiresAuth","credentials","url","options","headers","JSON","stringify","encodedCredentials","from","emailAddress","password","toString","fetch","getUser","response","status","json","then","data","Error","createUser","user","errors","getCourses","getCourse","id","createCourse","course","updatedCourse","deleteCourse"],"sources":["/Users/brojasbaez/Desktop/schoolDatabase/client/src/Data.js"],"sourcesContent":["import { Buffer } from \"buffer\";\n// import { CSSCourses } from \"data\"; \n\nexport default class Data {\n  api(\n    path,\n    method = \"GET\",\n    body = null,\n    requiresAuth = false,\n    credentials = null\n  ) {\n    const url = \"http://localhost:5000/api\" + path;\n\n    const options = {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    };\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if (requiresAuth) {\n      const encodedCredentials = Buffer.from(\n        `${credentials.emailAddress}:${credentials.password}`\n      ).toString(\"base64\");\n      options.headers[\"Authorization\"] = `Basic ${encodedCredentials}`;\n    }\n\n    return fetch(url, options);\n  }\n\n  async getUser(emailAddress, password) {\n    const response = await this.api(`/users`, \"GET\", null, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async createUser(user) {\n    const response = await this.api(\"/users\", \"POST\", user);\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async getCourses() {\n    const response = await this.api(`/courses`, \"GET\");\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async getCourse(id) {\n    const response = await this.api(`/courses/${id}`, \"GET\", null, true);\n    if (response.status === 200) {\n      return response.json().then((data) => data);\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  }\n\n  async createCourse(course, credentials) {\n    const { emailAddress, password } = credentials;\n    const response = await this.api(\"/courses\", \"POST\", course, true, {\n      emailAddress,\n      password,\n    });\n    if (response.status === 201) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async updatedCourse(id, course) {\n    const response = await this.api(`/courses/${id}`, \"PUT\", course);\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 400) {\n      return response.json().then((data) => {\n        return data.errors;\n      });\n    } else {\n      throw new Error();\n    }\n  }\n\n  async deleteCourse(id, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, \"DELETE\", true, {\n      emailAddress,\n      password,\n    });\n\n    if (response.status === 204) {\n      return [];\n    } else if (response.status === 400) {\n    } else {\n      throw new Error();\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}